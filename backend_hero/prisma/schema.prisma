// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id              Int             @id @default(autoincrement())
  userName        String
  password        String
  nombres         String
  apellidos       String
  cedula          String          @unique
  fechaNacimiento String

  administrador   Administrador[]
  entrenador      Entrenador[]
  recepcionista   Recepcionista[]
  cliente         Cliente[]
}

model Administrador {
  id        Int     @id @default(autoincrement())
  usuarioId Int
  usuario   Usuario @relation(fields: [usuarioId], references: [id])
}

model Entrenador {
  id        Int     @id @default(autoincrement())
  usuarioId Int
  horario   String
  sueldo    Float
  usuario   Usuario @relation(fields: [usuarioId], references: [id])
}

model Recepcionista {
  id        Int     @id @default(autoincrement())
  usuarioId Int
  horario   String
  sueldo    Float
  usuario   Usuario @relation(fields: [usuarioId], references: [id])
}

model Cliente {
  id               Int               @id @default(autoincrement())
  usuarioId        Int
  horario          String
  sexo             String
  observaciones    String
  objetivos        String
  tiempoEntrenar   Int

  usuario         Usuario           @relation(fields: [usuarioId], references: [id])
  clienteMedidas  ClienteMedida[]
  novedades        Novedad[]
  compras          Compra[]
  planes           ClientePlan[]
  rutinas          Rutina[]
}

model Medida {
  id              Int              @id @default(autoincrement())
  nombre          String
  clienteMedidas  ClienteMedida[]
}

model ClienteMedida {
  id         Int     @id @default(autoincrement())
  clienteId  Int
  medidaId   Int
  medida     Int

  cliente    Cliente @relation(fields: [clienteId], references: [id])
  medidaTipo Medida  @relation(fields: [medidaId], references: [id])
}

model Novedad {
  id          Int      @id @default(autoincrement())
  clienteId   Int
  novedad     String
  fecha       DateTime
  solventada  Boolean

  cliente     Cliente  @relation(fields: [clienteId], references: [id])
}

model Producto {
  id       Int       @id @default(autoincrement())
  nombre   String
  precio   Float
  stock    Int
  estado   Boolean

  compras  Compra[]
}

model Compra {
  id         Int       @id @default(autoincrement())
  productoId Int
  clienteId  Int
  cantidad   Int
  total      Float
  fecha      DateTime

  producto   Producto  @relation(fields: [productoId], references: [id])
  cliente    Cliente   @relation(fields: [clienteId], references: [id])
}

model Plan {
  id            Int            @id @default(autoincrement())
  nombre        String
  precio        Float 
  mesesPagar    Int
  clientePlan   ClientePlan[]
}

model ClientePlan {
  id           Int           @id @default(autoincrement())
  clienteId    Int
  planId       Int
  fechaInicio  DateTime
  fechaFin     DateTime
  diaPago      Int
  activado     Boolean

  cliente      Cliente     @relation(fields: [clienteId], references: [id])
  plan         Plan        @relation(fields: [planId], references: [id])
  pago         Pago[]
  deudas       Deuda[]
}

model Pago {
  id              Int           @id @default(autoincrement())
  clientePlanId   Int
  monto           Float
  fecha           DateTime

  clientePlan     ClientePlan   @relation(fields: [clientePlanId], references: [id])
}

model Deuda {
  id              Int           @id @default(autoincrement())
  clientePlanId   Int
  monto           Float
  solventada      Boolean

  clientePlan     ClientePlan   @relation(fields: [clientePlanId], references: [id])
}

model Rutina {
  id              Int           @id @default(autoincrement())
  clienteId       Int
  rutina          Bytes
  fechaInicio     DateTime
  fechaFin        DateTime
  observacion     String

  cliente         Cliente        @relation(fields: [clienteId], references: [id])
  entrenamiento   Entrenamiento? @relation("RutinaEntrenamiento") // sin fields ni references
}

model Entrenamiento {
  id         Int     @id @default(autoincrement())
  rutinaId   Int     @unique
  finalizado Boolean

  rutina     Rutina  @relation("RutinaEntrenamiento", fields: [rutinaId], references: [id])
  semanas    Semana[]

} 

model Semana {
  id               Int         @id @default(autoincrement())
  numero           Int
  musculoId        Int
  entrenamientoId  Int

  musculo          Musculo       @relation(fields: [musculoId], references: [id])
  entrenamiento    Entrenamiento @relation(fields: [entrenamientoId], references: [id])
  semanaEjercicios SemanaEjercicio[]
}

model Musculo {
  id      Int       @id @default(autoincrement())
  nombre  String

  semanas Semana[]
}

model SemanaEjercicio {
  id              Int          @id @default(autoincrement())
  ejercicioId     Int
  semanaId        Int
  orden           Int

  semana          Semana       @relation(fields: [semanaId], references: [id])
  ejercicio       Ejercicio    @relation(fields: [ejercicioId], references: [id])
  seriesReps      SerieRep[]
  seriesTiempos   SerieTiempo[]
}

model Ejercicio {
  id                 Int               @id @default(autoincrement())
  nombre             String
  foto               Bytes

  semanasEjercicios  SemanaEjercicio[]
}

model SerieRep {
  id                  Int              @id @default(autoincrement())
  semanaEjercicioId   Int
  orden               Int
  peso                Float
  repeticiones        Int
  unidadMedida        String

  semanaEjercicio     SemanaEjercicio  @relation(fields: [semanaEjercicioId], references: [id])
}

model SerieTiempo {
  id                  Int              @id @default(autoincrement())
  semanaEjercicioId   Int
  orden               Int
  peso                Float
  tiempo              Int
  unidadMedida        String

  semanaEjercicio     SemanaEjercicio  @relation(fields: [semanaEjercicioId], references: [id])
}
